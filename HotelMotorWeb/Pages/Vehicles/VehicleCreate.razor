@page "/vehicles/create"
@using HotelMotorShared.Dtos
@using HotelMotorWeb.Services.Vehicles
@inject VehiclesService VehiclesService
@inject NavigationManager NavigationManager

<div class="row justify-content-center">
    <div class="col-md-8 col-lg-6">
        <div class="card shadow-sm border-light rounded">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Crear nuevo vehículo</h5>
            </div>

            <div class="card-body">
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger" role="alert">
                        @errorMessage
                    </div>
                }

                <EditForm Model="newVehicle" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <Microsoft.AspNetCore.Components.Forms.ValidationSummary />

                    <div class="form-floating mb-3">
                        <InputText id="brand" class="form-control" @bind-Value="newVehicle.Brand" placeholder="Marca" />
                        <label for="brand">Marca</label>
                        <ValidationMessage For="@(() => newVehicle.Brand)" />
                    </div>

                    <div class="form-floating mb-3">
                        <InputText id="model" class="form-control" @bind-Value="newVehicle.Model" placeholder="Modelo" />
                        <label for="model">Modelo</label>
                        <ValidationMessage For="@(() => newVehicle.Model)" />
                    </div>

                    <div class="form-floating mb-3">
                        <InputText id="type" class="form-control" @bind-Value="newVehicle.Type" placeholder="Tipo" />
                        <label for="type">Tipo</label>
                        <ValidationMessage For="@(() => newVehicle.Type)" />
                    </div>

                    <div class="form-floating mb-3">
                        <InputNumber id="year" class="form-control" @bind-Value="newVehicle.Year" placeholder="Año" />
                        <label for="year">Año</label>
                        <ValidationMessage For="@(() => newVehicle.Year)" />
                    </div>

                    <div class="form-floating mb-3">
                        <InputText id="plate" class="form-control" @bind-Value="newVehicle.PlateNumber" placeholder="Placa" />
                        <label for="plate">Placa</label>
                        <ValidationMessage For="@(() => newVehicle.PlateNumber)" />
                    </div>

                    <div class="form-floating mb-3">
                        <InputNumber id="customerId" class="form-control" @bind-Value="newVehicle.CustomerId" placeholder="ID del cliente" />
                        <label for="customerId">ID del Cliente</label>
                        <ValidationMessage For="@(() => newVehicle.CustomerId)" />
                    </div>

                    <div class="text-end">
                        <button type="submit" class="btn btn-success">Guardar</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private AddVehicleDTO newVehicle = new();
    private string? errorMessage;

    private async Task HandleValidSubmit()
    {
        errorMessage = null;

        var created = await VehiclesService.CreateVehicleAsync(newVehicle);
        if (created)
        {
            NavigationManager.NavigateTo("/vehicles");
        }
        else
        {
            errorMessage = "Error al crear el vehículo. Por favor, intenta de nuevo.";
        }
    }
}
